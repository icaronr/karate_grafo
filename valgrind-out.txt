==5638== Memcheck, a memory error detector
==5638== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==5638== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==5638== Command: ./karate_grafo
==5638== Parent PID: 5578
==5638== 
--5638-- 
--5638-- Valgrind options:
--5638--    --leak-check=full
--5638--    --show-leak-kinds=all
--5638--    --track-origins=yes
--5638--    --verbose
--5638--    --log-file=valgrind-out.txt
--5638-- Contents of /proc/version:
--5638--   Linux version 4.13.0-37-generic (buildd@lcy01-amd64-026) (gcc version 7.2.0 (Ubuntu 7.2.0-8ubuntu3.2)) #42-Ubuntu SMP Wed Mar 7 14:13:23 UTC 2018
--5638-- 
--5638-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-avx-avx2-bmi
--5638-- Page sizes: currently 4096, max supported 4096
--5638-- Valgrind library directory: /usr/lib/valgrind
--5638-- Reading syms from /home/icaro/Projects/karate_grafo/karate_grafo
--5638-- Reading syms from /lib/x86_64-linux-gnu/ld-2.26.so
--5638--   Considering /lib/x86_64-linux-gnu/ld-2.26.so ..
--5638--   .. CRC mismatch (computed 89c8df08 wanted 47b839f9)
--5638--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.26.so ..
--5638--   .. CRC is valid
--5638-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--5638--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--5638--   .. CRC mismatch (computed 9fa343a0 wanted dc854ea8)
--5638--    object doesn't have a symbol table
--5638--    object doesn't have a dynamic symbol table
--5638-- Scheduler: using generic scheduler lock implementation.
--5638-- Reading suppressions file: /usr/lib/valgrind/default.supp
==5638== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-5638-by-icaro-on-???
==5638== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-5638-by-icaro-on-???
==5638== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-5638-by-icaro-on-???
==5638== 
==5638== TO CONTROL THIS PROCESS USING vgdb (which you probably
==5638== don't want to do, unless you know exactly what you're doing,
==5638== or are doing some strange experiment):
==5638==   /usr/lib/valgrind/../../bin/vgdb --pid=5638 ...command...
==5638== 
==5638== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==5638==   /path/to/gdb ./karate_grafo
==5638== and then give GDB the following command
==5638==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=5638
==5638== --pid is optional if only one valgrind process is running
==5638== 
--5638-- REDIR: 0x401f860 (ld-linux-x86-64.so.2:strlen) redirected to 0x58060901 (???)
--5638-- REDIR: 0x401f640 (ld-linux-x86-64.so.2:index) redirected to 0x5806091b (???)
--5638-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--5638--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--5638--   .. CRC mismatch (computed f3fb86a7 wanted 0b99f9ab)
--5638--    object doesn't have a symbol table
--5638-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--5638--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--5638--   .. CRC mismatch (computed 5ffa922b wanted 4228a583)
--5638--    object doesn't have a symbol table
==5638== WARNING: new redirection conflicts with existing -- ignoring it
--5638--     old: 0x0401f860 (strlen              ) R-> (0000.0) 0x58060901 ???
--5638--     new: 0x0401f860 (strlen              ) R-> (2007.0) 0x04c32db0 strlen
--5638-- REDIR: 0x401d8d0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c33ee0 (strcmp)
--5638-- REDIR: 0x401fda0 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c374f0 (mempcpy)
--5638-- Reading syms from /usr/lib/x86_64-linux-gnu/libgtk3-nocsd.so.0
--5638--    object doesn't have a symbol table
--5638-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.24
--5638--    object doesn't have a symbol table
--5638-- Reading syms from /lib/x86_64-linux-gnu/libgcc_s.so.1
--5638--    object doesn't have a symbol table
--5638-- Reading syms from /lib/x86_64-linux-gnu/libc-2.26.so
--5638--   Considering /lib/x86_64-linux-gnu/libc-2.26.so ..
--5638--   .. CRC mismatch (computed b6c34c34 wanted f79829d1)
--5638--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.26.so ..
--5638--   .. CRC is valid
--5638-- Reading syms from /lib/x86_64-linux-gnu/libdl-2.26.so
--5638--   Considering /lib/x86_64-linux-gnu/libdl-2.26.so ..
--5638--   .. CRC mismatch (computed 4752ccc3 wanted 4a46c849)
--5638--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libdl-2.26.so ..
--5638--   .. CRC is valid
--5638-- Reading syms from /lib/x86_64-linux-gnu/libpthread-2.26.so
--5638--   Considering /usr/lib/debug/.build-id/b9/5ecb6ece407081730183e686ff6cf2e0bce4f6.debug ..
--5638--   .. build-id is valid
--5638-- Reading syms from /lib/x86_64-linux-gnu/libm-2.26.so
--5638--   Considering /lib/x86_64-linux-gnu/libm-2.26.so ..
--5638--   .. CRC mismatch (computed b616e9a5 wanted 56d31e5b)
--5638--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libm-2.26.so ..
--5638--   .. CRC is valid
--5638-- REDIR: 0x5674f50 (libc.so.6:memmove) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5674010 (libc.so.6:strncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5675230 (libc.so.6:strcasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673a60 (libc.so.6:strcat) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5674040 (libc.so.6:rindex) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5676bb0 (libc.so.6:rawmemchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x56750c0 (libc.so.6:mempcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5674ee0 (libc.so.6:bcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673fd0 (libc.so.6:strncmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673ad0 (libc.so.6:strcmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5675020 (libc.so.6:memset) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5692f10 (libc.so.6:wcschr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673f70 (libc.so.6:strnlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673b40 (libc.so.6:strcspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5675280 (libc.so.6:strncasecmp) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673b10 (libc.so.6:strcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x56753c0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5674070 (libc.so.6:strpbrk) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673a90 (libc.so.6:index) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5673f40 (libc.so.6:strlen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x567f510 (libc.so.6:memrchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x56752d0 (libc.so.6:strcasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5674eb0 (libc.so.6:memchr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5693cc0 (libc.so.6:wcslen) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5674350 (libc.so.6:strspn) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5675200 (libc.so.6:stpncpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x56751d0 (libc.so.6:stpcpy) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5676be0 (libc.so.6:strchrnul) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5675320 (libc.so.6:strncasecmp_l) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x5674df0 (libc.so.6:strstr) redirected to 0x4a2a6e0 (_vgnU_ifunc_wrapper)
--5638-- REDIR: 0x575e6f0 (libc.so.6:__strrchr_avx2) redirected to 0x4c32730 (rindex)
--5638-- REDIR: 0x566eeb0 (libc.so.6:malloc) redirected to 0x4c2faa0 (malloc)
--5638-- REDIR: 0x575e8c0 (libc.so.6:__strlen_avx2) redirected to 0x4c32cf0 (strlen)
--5638-- REDIR: 0x575aed0 (libc.so.6:__memcmp_avx2_movbe) redirected to 0x4c35e00 (bcmp)
--5638-- REDIR: 0x573a0b0 (libc.so.6:__strcmp_ssse3) redirected to 0x4c33da0 (strcmp)
--5638-- REDIR: 0x50d3440 (libstdc++.so.6:operator new(unsigned long)) redirected to 0x4c30110 (operator new(unsigned long))
==5638== Invalid write of size 8
==5638==    at 0x10BBB4: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_impl::_Vector_impl() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AF13: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_base() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AA35: std::vector<VERTEX*, std::allocator<VERTEX*> >::vector() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109F7B: DataProcessing::DataProcessing() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109772: main (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==  Address 0x614ace8 is 20 bytes after a block of size 4 alloc'd
==5638==    at 0x4C3017F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5638==    by 0x109767: main (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638== 
==5638== Invalid write of size 8
==5638==    at 0x10BBBF: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_impl::_Vector_impl() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AF13: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_base() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AA35: std::vector<VERTEX*, std::allocator<VERTEX*> >::vector() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109F7B: DataProcessing::DataProcessing() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109772: main (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==  Address 0x614acf0 is 16 bytes after a block of size 16 in arena "client"
==5638== 
==5638== Invalid write of size 8
==5638==    at 0x10BBCB: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_impl::_Vector_impl() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AF13: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_base() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AA35: std::vector<VERTEX*, std::allocator<VERTEX*> >::vector() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109F7B: DataProcessing::DataProcessing() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109772: main (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==  Address 0x614acf8 is 24 bytes after a block of size 16 in arena "client"
==5638== 

valgrind: m_mallocfree.c:307 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 80, hi = 0.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==5638==    at 0x580441BA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x580442D4: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x58044459: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x58052FC0: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x5803CECA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x5803B5D3: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x5803FC9D: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x5803A8CB: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==5638==    by 0x1008E02C14: ???
==5638==    by 0x1008CADF2F: ???
==5638==    by 0x1C0F: ???
==5638==    by 0x10020085AF: ???
==5638==    by 0x1008CADF17: ???
==5638==    by 0x1008CADF2F: ???
==5638==    by 0x5946EB1F: ???
==5638==    by 0x600: ???
==5638==    by 0xE89F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 5638)
==5638==    at 0x10BBB4: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_impl::_Vector_impl() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AF13: std::_Vector_base<VERTEX*, std::allocator<VERTEX*> >::_Vector_base() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x10AA35: std::vector<VERTEX*, std::allocator<VERTEX*> >::vector() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109F8B: DataProcessing::DataProcessing() (in /home/icaro/Projects/karate_grafo/karate_grafo)
==5638==    by 0x109772: main (in /home/icaro/Projects/karate_grafo/karate_grafo)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

